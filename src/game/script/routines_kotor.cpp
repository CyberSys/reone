/*
 * Copyright © 2020 Vsevolod Kremianskii
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include "routines_common.h"

#include "../../script/routines.h"

using namespace reone::script;

namespace reone {

namespace game {

#define Void VariableType::Void
#define Int VariableType::Int
#define Float VariableType::Float
#define Object VariableType::Object
#define String VariableType::String
#define Effect VariableType::Effect
#define Event VariableType::Event
#define Location VariableType::Location
#define Talent VariableType::Talent
#define Vector VariableType::Vector
#define Action VariableType::Action

void initKotorRoutines() {
    RoutineManager &routines = RoutineMan.instance();
    routines.add("Random", Int, { Int });
    routines.add("PrintString", Void, { String });
    routines.add("PrintFloat", Void, { Float, Int, Int });
    routines.add("FloatToString", String, { Float, Int, Int });
    routines.add("PrintInteger", Void, { Int });
    routines.add("PrintObject", Void, { Object });
    routines.add("AssignCommand", Void, { Object, Action }, assignCommand);
    routines.add("DelayCommand", Void, { Float, Action }, delayCommand);
    routines.add("ExecuteScript", Void, { String, Object, Int });
    routines.add("ClearAllActions", Void, { });
    routines.add("SetFacing", Void, { Float });
    routines.add("SwitchPlayerCharacter", Int, { Int });
    routines.add("SetTime", Void, { Int, Int, Int, Int });
    routines.add("SetPartyLeader", Int, { Int });
    routines.add("SetAreaUnescapable", Void, { Int });
    routines.add("GetAreaUnescapable", Int, { });
    routines.add("GetTimeHour", Int, { });
    routines.add("GetTimeMinute", Int, { });
    routines.add("GetTimeSecond", Int, { });
    routines.add("GetTimeMillisecond", Int, { });
    routines.add("ActionRandomWalk", Void, { });
    routines.add("ActionMoveToLocation", Void, { Location, Int });
    routines.add("ActionMoveToObject", Void, { Object, Int, Float });
    routines.add("ActionMoveAwayFromObject", Void, { Object, Int, Float });
    routines.add("GetArea", Object, { Object });
    routines.add("GetEnteringObject", Object, { }, getEnteringObject);
    routines.add("GetExitingObject", Object, { });
    routines.add("GetPosition", Vector, { Object });
    routines.add("GetFacing", Float, { Object });
    routines.add("GetItemPossessor", Object, { Object });
    routines.add("GetItemPossessedBy", Object, { Object, String });
    routines.add("CreateItemOnObject", Object, { String, Object, Int });
    routines.add("ActionEquipItem", Void, { Object, Int, Int });
    routines.add("ActionUnequipItem", Void, { Object, Int });
    routines.add("ActionPickUpItem", Void, { Object });
    routines.add("ActionPutDownItem", Void, { Object });
    routines.add("GetLastAttacker", Object, { Object });
    routines.add("ActionAttack", Void, { Object, Int });
    routines.add("GetNearestCreature", Object, { Int, Int, Object, Int, Int, Int, Int, Int });
    routines.add("ActionSpeakString", Void, { String, Int });
    routines.add("ActionPlayAnimation", Void, { Int, Float, Float });
    routines.add("GetDistanceToObject", Float, { Object });
    routines.add("GetIsObjectValid", Int, { Object }, getIsObjectValid);
    routines.add("ActionOpenDoor", Void, { Object });
    routines.add("ActionCloseDoor", Void, { Object });
    routines.add("SetCameraFacing", Void, { Float });
    routines.add("PlaySound", Void, { String });
    routines.add("GetSpellTargetObject", Object, { });
    routines.add("ActionCastSpellAtObject", Void, { Int, Object, Int, Int, Int, Int, Int });
    routines.add("GetCurrentHitPoints", Int, { Object });
    routines.add("GetMaxHitPoints", Int, { Object });
    routines.add("EffectAssuredHit", Effect, { });
    routines.add("GetLastItemEquipped", Object, { });
    routines.add("GetSubScreenID", Int, { });
    routines.add("CancelCombat", Void, { Object });
    routines.add("GetCurrentForcePoints", Int, { Object });
    routines.add("GetMaxForcePoints", Int, { Object });
    routines.add("PauseGame", Void, { Int });
    routines.add("SetPlayerRestrictMode", Void, { Int });
    routines.add("GetStringLength", Int, { String });
    routines.add("GetStringUpperCase", String, { String });
    routines.add("GetStringLowerCase", String, { String });
    routines.add("GetStringRight", String, { String, Int });
    routines.add("GetStringLeft", String, { String, Int });
    routines.add("InsertString", String, { String, String, Int });
    routines.add("GetSubString", String, { String, Int, Int });
    routines.add("FindSubString", Int, { String, String });
    routines.add("fabs", Float, { Float });
    routines.add("cos", Float, { Float });
    routines.add("sin", Float, { Float });
    routines.add("tan", Float, { Float });
    routines.add("acos", Float, { Float });
    routines.add("asin", Float, { Float });
    routines.add("atan", Float, { Float });
    routines.add("log", Float, { Float });
    routines.add("pow", Float, { Float, Float });
    routines.add("sqrt", Float, { Float });
    routines.add("abs", Int, { Int });
    routines.add("EffectHeal", Effect, { Int });
    routines.add("EffectDamage", Effect, { Int, Int, Int });
    routines.add("EffectAbilityIncrease", Effect, { Int, Int });
    routines.add("EffectDamageResistance", Effect, { Int, Int, Int });
    routines.add("EffectResurrection", Effect, { });
    routines.add("GetPlayerRestrictMode", Int, { Object });
    routines.add("GetCasterLevel", Int, { Object });
    routines.add("GetFirstEffect", Effect, { Object });
    routines.add("GetNextEffect", Effect, { Object });
    routines.add("RemoveEffect", Void, { Object, Effect });
    routines.add("GetIsEffectValid", Int, { Effect });
    routines.add("GetEffectDurationType", Int, { Effect });
    routines.add("GetEffectSubType", Int, { Effect });
    routines.add("GetEffectCreator", Object, { Effect });
    routines.add("IntToString", String, { Int });
    routines.add("GetFirstObjectInArea", Object, { Object, Int });
    routines.add("GetNextObjectInArea", Object, { Object, Int });
    routines.add("d2", Int, { Int });
    routines.add("d3", Int, { Int });
    routines.add("d4", Int, { Int });
    routines.add("d6", Int, { Int });
    routines.add("d8", Int, { Int });
    routines.add("d", Int, { Int });
    routines.add("d12", Int, { Int });
    routines.add("d", Int, { Int });
    routines.add("d0", Int, { Int });
    routines.add("VectorMagnitude", Float, { Vector });
    routines.add("GetMetaMagicFeat", Int, { });
    routines.add("GetObjectType", Int, { Object });
    routines.add("GetRacialType", Int, { Object });
    routines.add("FortitudeSave", Int, { Object, Int, Int, Object });
    routines.add("ReflexSave", Int, { Object, Int, Int, Object });
    routines.add("WillSave", Int, { Object, Int, Int, Object });
    routines.add("GetSpellSaveDC", Int, { });
    routines.add("MagicalEffect", Effect, { Effect });
    routines.add("SupernaturalEffect", Effect, { Effect });
    routines.add("ExtraordinaryEffect", Effect, { Effect });
    routines.add("EffectACIncrease", Effect, { Int, Int, Int });
    routines.add("GetAC", Int, { Object, Int });
    routines.add("EffectSavingThrowIncrease", Effect, { Int, Int, Int });
    routines.add("EffectAttackIncrease", Effect, { Int, Int });
    routines.add("EffectDamageReduction", Effect, { Int, Int, Int });
    routines.add("EffectDamageIncrease", Effect, { Int, Int });
    routines.add("RoundsToSeconds", Float, { Int });
    routines.add("HoursToSeconds", Float, { Int });
    routines.add("TurnsToSeconds", Float, { Int });
    routines.add("SoundObjectSetFixedVariance", Void, { Object, Float });
    routines.add("GetGoodEvilValue", Int, { Object });
    routines.add("GetPartyMemberCount", Int, { });
    routines.add("GetAlignmentGoodEvil", Int, { Object });
    routines.add("GetFirstObjectInShape", Object, { Int, Float, Location, Int, Int, Vector });
    routines.add("GetNextObjectInShape", Object, { Int, Float, Location, Int, Int, Vector });
    routines.add("EffectEntangle", Effect, { });
    routines.add("SignalEvent", Void, { Object, Event });
    routines.add("EventUserDefined", Event, { Int });
    routines.add("EffectDeath", Effect, { Int, Int });
    routines.add("EffectKnockdown", Effect, { });
    routines.add("ActionGiveItem", Void, { Object, Object });
    routines.add("ActionTakeItem", Void, { Object, Object });
    routines.add("VectorNormalize", Vector, { Vector });
    routines.add("GetItemStackSize", Int, { Object });
    routines.add("GetAbilityScore", Int, { Object, Int });
    routines.add("GetIsDead", Int, { Object });
    routines.add("PrintVector", Void, { Vector, Int });
    routines.add("Vector", Vector, { Float, Float, Float });
    routines.add("SetFacingPoint", Void, { Vector });
    routines.add("AngleToVector", Vector, { Float });
    routines.add("VectorToAngle", Float, { Vector });
    routines.add("TouchAttackMelee", Int, { Object, Int });
    routines.add("TouchAttackRanged", Int, { Object, Int });
    routines.add("EffectParalyze", Effect, { });
    routines.add("EffectSpellImmunity", Effect, { Int });
    routines.add("SetItemStackSize", Void, { Object, Int });
    routines.add("GetDistanceBetween", Float, { Object, Object });
    routines.add("SetReturnStrref", Void, { Int, Int, Int });
    routines.add("EffectForceJump", Effect, { Object, Int });
    routines.add("EffectSleep", Effect, { });
    routines.add("GetItemInSlot", Object, { Int, Object });
    routines.add("EffectTemporaryForcePoints", Effect, { Int });
    routines.add("EffectConfused", Effect, { });
    routines.add("EffectFrightened", Effect, { });
    routines.add("EffectChoke", Effect, { });
    routines.add("SetGlobalString", Void, { String, String });
    routines.add("EffectStunned", Effect, { });
    routines.add("SetCommandable", Void, { Int, Object });
    routines.add("GetCommandable", Int, { Object });
    routines.add("EffectRegenerate", Effect, { Int, Float });
    routines.add("EffectMovementSpeedIncrease", Effect, { Int });
    routines.add("GetHitDice", Int, { Object });
    routines.add("ActionForceFollowObject", Void, { Object, Float });
    routines.add("GetTag", String, { Object });
    routines.add("ResistForce", Int, { Object, Object });
    routines.add("GetEffectType", Int, { Effect });
    routines.add("EffectAreaOfEffect", Effect, { Int, String, String, String });
    routines.add("GetFactionEqual", Int, { Object, Object });
    routines.add("ChangeFaction", Void, { Object, Object });
    routines.add("GetIsListening", Int, { Object });
    routines.add("SetListening", Void, { Object, Int });
    routines.add("SetListenPattern", Void, { Object, String, Int });
    routines.add("TestStringAgainstPattern", Int, { String, String });
    routines.add("GetMatchedSubstring", String, { Int });
    routines.add("GetMatchedSubstringsCount", Int, { });
    routines.add("EffectVisualEffect", Effect, { Int, Int });
    routines.add("GetFactionWeakestMember", Object, { Object, Int });
    routines.add("GetFactionStrongestMember", Object, { Object, Int });
    routines.add("GetFactionMostDamagedMember", Object, { Object, Int });
    routines.add("GetFactionLeastDamagedMember", Object, { Object, Int });
    routines.add("GetFactionGold", Int, { Object });
    routines.add("GetFactionAverageReputation", Int, { Object, Object });
    routines.add("GetFactionAverageGoodEvilAlignment", Int, { Object });
    routines.add("SoundObjectGetFixedVariance", Float, { Object });
    routines.add("GetFactionAverageLevel", Int, { Object });
    routines.add("GetFactionAverageXP", Int, { Object });
    routines.add("GetFactionMostFrequentClass", Int, { Object });
    routines.add("GetFactionWorstAC", Object, { Object, Int });
    routines.add("GetFactionBestAC", Object, { Object, Int });
    routines.add("GetGlobalString", String, { String });
    routines.add("GetListenPatternNumber", Int, { });
    routines.add("ActionJumpToObject", Void, { Object, Int });
    routines.add("GetWaypointByTag", Object, { String });
    routines.add("GetTransitionTarget", Object, { Object });
    routines.add("EffectLinkEffects", Effect, { Effect, Effect });
    routines.add("GetObjectByTag", Object, { String, Int }, getObjectByTag);
    routines.add("AdjustAlignment", Void, { Object, Int, Int });
    routines.add("ActionWait", Void, { Float });
    routines.add("SetAreaTransitionBMP", Void, { Int, String });
    routines.add("ActionStartConversation", Void, { Object, String, Int, Int, Int, String, String, String, String, String, String, Int }, actionStartConversation);
    routines.add("ActionPauseConversation", Void, { });
    routines.add("ActionResumeConversation", Void, { });
    routines.add("EffectBeam", Effect, { Int, Object, Int, Int });
    routines.add("GetReputation", Int, { Object, Object });
    routines.add("AdjustReputation", Void, { Object, Object, Int });
    routines.add("GetModuleFileName", String, { });
    routines.add("GetGoingToBeAttackedBy", Object, { Object });
    routines.add("EffectForceResistanceIncrease", Effect, { Int });
    routines.add("GetLocation", Location, { Object });
    routines.add("ActionJumpToLocation", Void, { Location });
    routines.add("Location", Location, { Vector, Float });
    routines.add("ApplyEffectAtLocation", Void, { Int, Effect, Location, Float });
    routines.add("GetIsPC", Int, { Object }, getIsPC);
    routines.add("FeetToMeters", Float, { Float });
    routines.add("YardsToMeters", Float, { Float });
    routines.add("ApplyEffectToObject", Void, { Int, Effect, Object, Float });
    routines.add("SpeakString", Void, { String, Int });
    routines.add("GetSpellTargetLocation", Location, { });
    routines.add("GetPositionFromLocation", Vector, { Location });
    routines.add("EffectBodyFuel", Effect, { });
    routines.add("GetFacingFromLocation", Float, { Location });
    routines.add("GetNearestCreatureToLocation", Object, { Int, Int, Location, Int, Int, Int, Int, Int });
    routines.add("GetNearestObject", Object, { Int, Object, Int });
    routines.add("GetNearestObjectToLocation", Object, { Int, Location, Int });
    routines.add("GetNearestObjectByTag", Object, { String, Object, Int });
    routines.add("IntToFloat", Float, { Int });
    routines.add("FloatToInt", Int, { Float });
    routines.add("StringToInt", Int, { String });
    routines.add("StringToFloat", Float, { String });
    routines.add("ActionCastSpellAtLocation", Void, { Int, Location, Int, Int, Int, Int });
    routines.add("GetIsEnemy", Int, { Object, Object });
    routines.add("GetIsFriend", Int, { Object, Object });
    routines.add("GetIsNeutral", Int, { Object, Object });
    routines.add("GetPCSpeaker", Object, { });
    routines.add("GetStringByStrRef", String, { Int });
    routines.add("ActionSpeakStringByStrRef", Void, { Int, Int });
    routines.add("DestroyObject", Void, { Object, Float, Int, Float });
    routines.add("GetModule", Object, { });
    routines.add("CreateObject", Object, { Int, String, Location, Int });
    routines.add("EventSpellCastAt", Event, { Object, Int, Int });
    routines.add("GetLastSpellCaster", Object, { });
    routines.add("GetLastSpell", Int, { });
    routines.add("GetUserDefinedEventNumber", Int, { });
    routines.add("GetSpellId", Int, { });
    routines.add("RandomName", String, { });
    routines.add("EffectPoison", Effect, { Int });
    routines.add("GetLoadFromSaveGame", Int, { });
    routines.add("EffectAssuredDeflection", Effect, { Int });
    routines.add("GetName", String, { Object });
    routines.add("GetLastSpeaker", Object, { });
    routines.add("BeginConversation", Int, { String, Object });
    routines.add("GetLastPerceived", Object, { });
    routines.add("GetLastPerceptionHeard", Int, { });
    routines.add("GetLastPerceptionInaudible", Int, { });
    routines.add("GetLastPerceptionSeen", Int, { });
    routines.add("GetLastClosedBy", Object, { });
    routines.add("GetLastPerceptionVanished", Int, { });
    routines.add("GetFirstInPersistentObject", Object, { Object, Int, Int });
    routines.add("GetNextInPersistentObject", Object, { Object, Int, Int });
    routines.add("GetAreaOfEffectCreator", Object, { Object });
    routines.add("ShowLevelUpGUI", Int, { });
    routines.add("SetItemNonEquippable", Void, { Object, Int });
    routines.add("GetButtonMashCheck", Int, { });
    routines.add("SetButtonMashCheck", Void, { Int });
    routines.add("EffectForcePushTargeted", Effect, { Location, Int });
    routines.add("EffectHaste", Effect, { });
    routines.add("GiveItem", Void, { Object, Object });
    routines.add("ObjectToString", String, { Object });
    routines.add("EffectImmunity", Effect, { Int });
    routines.add("GetIsImmune", Int, { Object, Int, Object });
    routines.add("EffectDamageImmunityIncrease", Effect, { Int, Int });
    routines.add("GetEncounterActive", Int, { Object });
    routines.add("SetEncounterActive", Void, { Int, Object });
    routines.add("GetEncounterSpawnsMax", Int, { Object });
    routines.add("SetEncounterSpawnsMax", Void, { Int, Object });
    routines.add("GetEncounterSpawnsCurrent", Int, { Object });
    routines.add("SetEncounterSpawnsCurrent", Void, { Int, Object });
    routines.add("GetModuleItemAcquired", Object, { });
    routines.add("GetModuleItemAcquiredFrom", Object, { });
    routines.add("SetCustomToken", Void, { Int, String });
    routines.add("GetHasFeat", Int, { Int, Object });
    routines.add("GetHasSkill", Int, { Int, Object });
    routines.add("ActionUseFeat", Void, { Int, Object });
    routines.add("ActionUseSkill", Void, { Int, Object, Int, Object });
    routines.add("GetObjectSeen", Int, { Object, Object });
    routines.add("GetObjectHeard", Int, { Object, Object });
    routines.add("GetLastPlayerDied", Object, { });
    routines.add("GetModuleItemLost", Object, { });
    routines.add("GetModuleItemLostBy", Object, { });
    routines.add("ActionDoCommand", Void, { Action });
    routines.add("EventConversation", Event, { });
    routines.add("SetEncounterDifficulty", Void, { Int, Object });
    routines.add("GetEncounterDifficulty", Int, { Object });
    routines.add("GetDistanceBetweenLocations", Float, { Location, Location });
    routines.add("GetReflexAdjustedDamage", Int, { Int, Object, Int, Int, Object });
    routines.add("PlayAnimation", Void, { Int, Float, Float });
    routines.add("TalentSpell", Talent, { Int });
    routines.add("TalentFeat", Talent, { Int });
    routines.add("TalentSkill", Talent, { Int });
    routines.add("GetHasSpellEffect", Int, { Int, Object });
    routines.add("GetEffectSpellId", Int, { Effect });
    routines.add("GetCreatureHasTalent", Int, { Talent, Object });
    routines.add("GetCreatureTalentRandom", Talent, { Int, Object, Int });
    routines.add("GetCreatureTalentBest", Talent, { Int, Int, Object, Int, Int, Int });
    routines.add("ActionUseTalentOnObject", Void, { Talent, Object });
    routines.add("ActionUseTalentAtLocation", Void, { Talent, Location });
    routines.add("GetGoldPieceValue", Int, { Object });
    routines.add("GetIsPlayableRacialType", Int, { Object });
    routines.add("JumpToLocation", Void, { Location });
    routines.add("EffectTemporaryHitpoints", Effect, { Int });
    routines.add("GetSkillRank", Int, { Int, Object });
    routines.add("GetAttackTarget", Object, { Object });
    routines.add("GetLastAttackType", Int, { Object });
    routines.add("GetLastAttackMode", Int, { Object });
    routines.add("GetDistanceBetween2D", Float, { Object, Object });
    routines.add("GetIsInCombat", Int, { Object });
    routines.add("GetLastAssociateCommand", Int, { Object });
    routines.add("GiveGoldToCreature", Void, { Object, Int });
    routines.add("SetIsDestroyable", Void, { Int, Int, Int });
    routines.add("SetLocked", Void, { Object, Int });
    routines.add("GetLocked", Int, { Object });
    routines.add("GetClickingObject", Object, { });
    routines.add("SetAssociateListenPatterns", Void, { Object });
    routines.add("GetLastWeaponUsed", Object, { Object });
    routines.add("ActionInteractObject", Void, { Object });
    routines.add("GetLastUsedBy", Object, { });
    routines.add("GetAbilityModifier", Int, { Int, Object });
    routines.add("GetIdentified", Int, { Object });
    routines.add("SetIdentified", Void, { Object, Int });
    routines.add("GetDistanceBetweenLocations2D", Float, { Location, Location });
    routines.add("GetDistanceToObject2D", Float, { Object });
    routines.add("GetBlockingDoor", Object, { });
    routines.add("GetIsDoorActionPossible", Int, { Object, Int });
    routines.add("DoDoorAction", Void, { Object, Int });
    routines.add("GetFirstItemInInventory", Object, { Object });
    routines.add("GetNextItemInInventory", Object, { Object });
    routines.add("GetClassByPosition", Int, { Int, Object });
    routines.add("GetLevelByPosition", Int, { Int, Object });
    routines.add("GetLevelByClass", Int, { Int, Object }, getLevelByClass);
    routines.add("GetDamageDealtByType", Int, { Int });
    routines.add("GetTotalDamageDealt", Int, { });
    routines.add("GetLastDamager", Object, { });
    routines.add("GetLastDisarmed", Object, { });
    routines.add("GetLastDisturbed", Object, { });
    routines.add("GetLastLocked", Object, { });
    routines.add("GetLastUnlocked", Object, { });
    routines.add("EffectSkillIncrease", Effect, { Int, Int });
    routines.add("GetInventoryDisturbType", Int, { });
    routines.add("GetInventoryDisturbItem", Object, { });
    routines.add("ShowUpgradeScreen", Void, { Object });
    routines.add("VersusAlignmentEffect", Effect, { Effect, Int, Int });
    routines.add("VersusRacialTypeEffect", Effect, { Effect, Int });
    routines.add("VersusTrapEffect", Effect, { Effect });
    routines.add("GetGender", Int, { Object }, getGender);
    routines.add("GetIsTalentValid", Int, { Talent });
    routines.add("ActionMoveAwayFromLocation", Void, { Location, Int, Float });
    routines.add("GetAttemptedAttackTarget", Object, { });
    routines.add("GetTypeFromTalent", Int, { Talent });
    routines.add("GetIdFromTalent", Int, { Talent });
    routines.add("PlayPazaak", Void, { Int, String, Int, Int, Object });
    routines.add("GetLastPazaakResult", Int, { });
    routines.add("DisplayFeedBackText", Void, { Object, Int });
    routines.add("AddJournalQuestEntry", Void, { String, Int, Int });
    routines.add("RemoveJournalQuestEntry", Void, { String });
    routines.add("GetJournalEntry", Int, { String });
    routines.add("PlayRumblePattern", Int, { Int });
    routines.add("StopRumblePattern", Int, { Int });
    routines.add("EffectDamageForcePoints", Effect, { Int });
    routines.add("EffectHealForcePoints", Effect, { Int });
    routines.add("SendMessageToPC", Void, { Object, String });
    routines.add("GetAttemptedSpellTarget", Object, { });
    routines.add("GetLastOpenedBy", Object, { });
    routines.add("GetHasSpell", Int, { Int, Object });
    routines.add("OpenStore", Void, { Object, Object, Int, Int });
    routines.add("ActionSurrenderToEnemies", Void, { });
    routines.add("GetFirstFactionMember", Object, { Object, Int });
    routines.add("GetNextFactionMember", Object, { Object, Int });
    routines.add("ActionForceMoveToLocation", Void, { Location, Int, Float });
    routines.add("ActionForceMoveToObject", Void, { Object, Int, Float, Float });
    routines.add("GetJournalQuestExperience", Int, { String });
    routines.add("JumpToObject", Void, { Object, Int });
    routines.add("SetMapPinEnabled", Void, { Object, Int });
    routines.add("EffectHitPointChangeWhenDying", Effect, { Float });
    routines.add("PopUpGUIPanel", Void, { Object, Int });
    routines.add("AddMultiClass", Void, { Int, Object });
    routines.add("GetIsLinkImmune", Int, { Object, Effect });
    routines.add("EffectDroidStun", Effect, { });
    routines.add("EffectForcePushed", Effect, { });
    routines.add("GiveXPToCreature", Void, { Object, Int });
    routines.add("SetXP", Void, { Object, Int });
    routines.add("GetXP", Int, { Object });
    routines.add("IntToHexString", String, { Int });
    routines.add("GetBaseItemType", Int, { Object });
    routines.add("GetItemHasItemProperty", Int, { Object, Int });
    routines.add("ActionEquipMostDamagingMelee", Void, { Object, Int });
    routines.add("ActionEquipMostDamagingRanged", Void, { Object });
    routines.add("GetItemACValue", Int, { Object });
    routines.add("EffectForceResisted", Effect, { Object });
    routines.add("ExploreAreaForPlayer", Void, { Object, Object });
    routines.add("ActionEquipMostEffectiveArmor", Void, { });
    routines.add("GetIsDay", Int, { });
    routines.add("GetIsNight", Int, { });
    routines.add("GetIsDawn", Int, { });
    routines.add("GetIsDusk", Int, { });
    routines.add("GetIsEncounterCreature", Int, { Object });
    routines.add("GetLastPlayerDying", Object, { });
    routines.add("GetStartingLocation", Location, { });
    routines.add("ChangeToStandardFaction", Void, { Object, Int });
    routines.add("SoundObjectPlay", Void, { Object });
    routines.add("SoundObjectStop", Void, { Object });
    routines.add("SoundObjectSetVolume", Void, { Object, Int });
    routines.add("SoundObjectSetPosition", Void, { Object, Vector });
    routines.add("SpeakOneLinerConversation", Void, { String, Object });
    routines.add("GetGold", Int, { Object });
    routines.add("GetLastRespawnButtonPresser", Object, { });
    routines.add("EffectForceFizzle", Effect, { });
    routines.add("SetLightsaberPowered", Void, { Object, Int, Int, Int });
    routines.add("GetIsWeaponEffective", Int, { Object, Int });
    routines.add("GetLastSpellHarmful", Int, { });
    routines.add("EventActivateItem", Event, { Object, Location, Object });
    routines.add("MusicBackgroundPlay", Void, { Object });
    routines.add("MusicBackgroundStop", Void, { Object });
    routines.add("MusicBackgroundSetDelay", Void, { Object, Int });
    routines.add("MusicBackgroundChangeDay", Void, { Object, Int });
    routines.add("MusicBackgroundChangeNight", Void, { Object, Int });
    routines.add("MusicBattlePlay", Void, { Object });
    routines.add("MusicBattleStop", Void, { Object });
    routines.add("MusicBattleChange", Void, { Object, Int });
    routines.add("AmbientSoundPlay", Void, { Object });
    routines.add("AmbientSoundStop", Void, { Object });
    routines.add("AmbientSoundChangeDay", Void, { Object, Int });
    routines.add("AmbientSoundChangeNight", Void, { Object, Int });
    routines.add("GetLastKiller", Object, { });
    routines.add("GetSpellCastItem", Object, { });
    routines.add("GetItemActivated", Object, { });
    routines.add("GetItemActivator", Object, { });
    routines.add("GetItemActivatedTargetLocation", Location, { });
    routines.add("GetItemActivatedTarget", Object, { });
    routines.add("GetIsOpen", Int, { Object });
    routines.add("TakeGoldFromCreature", Void, { Int, Object, Int });
    routines.add("GetIsInConversation", Int, { Object });
    routines.add("EffectAbilityDecrease", Effect, { Int, Int });
    routines.add("EffectAttackDecrease", Effect, { Int, Int });
    routines.add("EffectDamageDecrease", Effect, { Int, Int });
    routines.add("EffectDamageImmunityDecrease", Effect, { Int, Int });
    routines.add("EffectACDecrease", Effect, { Int, Int, Int });
    routines.add("EffectMovementSpeedDecrease", Effect, { Int });
    routines.add("EffectSavingThrowDecrease", Effect, { Int, Int, Int });
    routines.add("EffectSkillDecrease", Effect, { Int, Int });
    routines.add("EffectForceResistanceDecrease", Effect, { Int });
    routines.add("GetPlotFlag", Int, { Object });
    routines.add("SetPlotFlag", Void, { Object, Int });
    routines.add("EffectInvisibility", Effect, { Int });
    routines.add("EffectConcealment", Effect, { Int });
    routines.add("EffectForceShield", Effect, { Int });
    routines.add("EffectDispelMagicAll", Effect, { Int });
    routines.add("SetDialogPlaceableCamera", Void, { Int });
    routines.add("GetSoloMode", Int, { });
    routines.add("EffectDisguise", Effect, { Int });
    routines.add("GetMaxStealthXP", Int, { });
    routines.add("EffectTrueSeeing", Effect, { });
    routines.add("EffectSeeInvisible", Effect, { });
    routines.add("EffectTimeStop", Effect, { });
    routines.add("SetMaxStealthXP", Void, { Int });
    routines.add("EffectBlasterDeflectionIncrease", Effect, { Int });
    routines.add("EffectBlasterDeflectionDecrease", Effect, { Int });
    routines.add("EffectHorrified", Effect, { });
    routines.add("EffectSpellLevelAbsorption", Effect, { Int, Int, Int });
    routines.add("EffectDispelMagicBest", Effect, { Int });
    routines.add("GetCurrentStealthXP", Int, { });
    routines.add("GetNumStackedItems", Int, { Object });
    routines.add("SurrenderToEnemies", Void, { });
    routines.add("EffectMissChance", Effect, { Int });
    routines.add("SetCurrentStealthXP", Void, { Int });
    routines.add("GetCreatureSize", Int, { Object });
    routines.add("AwardStealthXP", Void, { Object });
    routines.add("GetStealthXPEnabled", Int, { });
    routines.add("SetStealthXPEnabled", Void, { Int });
    routines.add("ActionUnlockObject", Void, { Object });
    routines.add("ActionLockObject", Void, { Object });
    routines.add("EffectModifyAttacks", Effect, { Int });
    routines.add("GetLastTrapDetected", Object, { Object });
    routines.add("EffectDamageShield", Effect, { Int, Int, Int });
    routines.add("GetNearestTrapToObject", Object, { Object, Int });
    routines.add("GetAttemptedMovementTarget", Object, { });
    routines.add("GetBlockingCreature", Object, { Object });
    routines.add("GetFortitudeSavingThrow", Int, { Object });
    routines.add("GetWillSavingThrow", Int, { Object });
    routines.add("GetReflexSavingThrow", Int, { Object });
    routines.add("GetChallengeRating", Float, { Object });
    routines.add("GetFoundEnemyCreature", Object, { Object });
    routines.add("GetMovementRate", Int, { Object });
    routines.add("GetSubRace", Int, { Object });
    routines.add("GetStealthXPDecrement", Int, { });
    routines.add("SetStealthXPDecrement", Void, { Int });
    routines.add("DuplicateHeadAppearance", Void, { Object, Object });
    routines.add("ActionCastFakeSpellAtObject", Void, { Int, Object, Int });
    routines.add("ActionCastFakeSpellAtLocation", Void, { Int, Location, Int });
    routines.add("CutsceneAttack", Void, { Object, Int, Int, Int });
    routines.add("SetCameraMode", Void, { Object, Int });
    routines.add("SetLockOrientationInDialog", Void, { Object, Int });
    routines.add("SetLockHeadFollowInDialog", Void, { Object, Int });
    routines.add("CutsceneMove", Void, { Object, Vector, Int });
    routines.add("EnableVideoEffect", Void, { Int });
    routines.add("StartNewModule", Void, { String, String, String, String, String, String, String, String });
    routines.add("DisableVideoEffect", Void, { });
    routines.add("GetWeaponRanged", Int, { Object });
    routines.add("DoSinglePlayerAutoSave", Void, { });
    routines.add("GetGameDifficulty", Int, { });
    routines.add("GetUserActionsPending", Int, { });
    routines.add("RevealMap", Void, { Vector, Int });
    routines.add("SetTutorialWindowsEnabled", Void, { Int });
    routines.add("ShowTutorialWindow", Void, { Int });
    routines.add("StartCreditSequence", Void, { Int });
    routines.add("IsCreditSequenceInProgress", Int, { });
    routines.add("SWMG_SetLateralAccelerationPerSecond", Void, { Float });
    routines.add("SWMG_GetLateralAccelerationPerSecond", Float, { });
    routines.add("GetCurrentAction", Int, { Object });
    routines.add("GetDifficultyModifier", Float, { });
    routines.add("GetAppearanceType", Int, { Object });
    routines.add("FloatingTextStrRefOnCreature", Void, { Int, Object, Int });
    routines.add("FloatingTextStringOnCreature", Void, { String, Object, Int });
    routines.add("GetTrapDisarmable", Int, { Object });
    routines.add("GetTrapDetectable", Int, { Object });
    routines.add("GetTrapDetectedBy", Int, { Object, Object });
    routines.add("GetTrapFlagged", Int, { Object });
    routines.add("GetTrapBaseType", Int, { Object });
    routines.add("GetTrapOneShot", Int, { Object });
    routines.add("GetTrapCreator", Object, { Object });
    routines.add("GetTrapKeyTag", String, { Object });
    routines.add("GetTrapDisarmDC", Int, { Object });
    routines.add("GetTrapDetectDC", Int, { Object });
    routines.add("GetLockKeyRequired", Int, { Object });
    routines.add("GetLockKeyTag", Int, { Object });
    routines.add("GetLockLockable", Int, { Object });
    routines.add("GetLockUnlockDC", Int, { Object });
    routines.add("GetLockLockDC", Int, { Object });
    routines.add("GetPCLevellingUp", Object, { });
    routines.add("GetHasFeatEffect", Int, { Int, Object });
    routines.add("SetPlaceableIllumination", Void, { Object, Int });
    routines.add("GetPlaceableIllumination", Int, { Object });
    routines.add("GetIsPlaceableObjectActionPossible", Int, { Object, Int });
    routines.add("DoPlaceableObjectAction", Void, { Object, Int });
    routines.add("GetFirstPC", Object, { }, getFirstPC);
    routines.add("GetNextPC", Object, { }, getFirstPC);
    routines.add("SetTrapDetectedBy", Int, { Object, Object });
    routines.add("GetIsTrapped", Int, { Object });
    routines.add("SetEffectIcon", Effect, { Effect, Int });
    routines.add("FaceObjectAwayFromObject", Void, { Object, Object });
    routines.add("PopUpDeathGUIPanel", Void, { Object, Int, Int, Int, String });
    routines.add("SetTrapDisabled", Void, { Object });
    routines.add("GetLastHostileActor", Object, { Object });
    routines.add("ExportAllCharacters", Void, { });
    routines.add("MusicBackgroundGetDayTrack", Int, { Object });
    routines.add("MusicBackgroundGetNightTrack", Int, { Object });
    routines.add("WriteTimestampedLogEntry", Void, { String });
    routines.add("GetModuleName", String, { });
    routines.add("GetFactionLeader", Object, { Object });
    routines.add("SWMG_SetSpeedBlurEffect", Void, { Int, Float });
    routines.add("EndGame", Void, { Int });
    routines.add("GetRunScriptVar", Int, { });
    routines.add("GetCreatureMovmentType", Int, { Object });
    routines.add("AmbientSoundSetDayVolume", Void, { Object, Int });
    routines.add("AmbientSoundSetNightVolume", Void, { Object, Int });
    routines.add("MusicBackgroundGetBattleTrack", Int, { Object });
    routines.add("GetHasInventory", Int, { Object });
    routines.add("GetStrRefSoundDuration", Float, { Int });
    routines.add("AddToParty", Void, { Object, Object });
    routines.add("RemoveFromParty", Void, { Object });
    routines.add("AddPartyMember", Int, { Int, Object });
    routines.add("RemovePartyMember", Int, { Int });
    routines.add("IsObjectPartyMember", Int, { Object });
    routines.add("GetPartyMemberByIndex", Object, { Int });
    routines.add("GetGlobalBoolean", Int, { String });
    routines.add("SetGlobalBoolean", Void, { String, Int });
    routines.add("GetGlobalNumber", Int, { String });
    routines.add("SetGlobalNumber", Void, { String, Int });
    routines.add("AurPostString", Void, { String, Int, Int, Float });
    routines.add("SWMG_GetLastEvent", String, { });
    routines.add("SWMG_GetLastEventModelName", String, { });
    routines.add("SWMG_GetObjectByName", Object, { String });
    routines.add("SWMG_PlayAnimation", Void, { Object, String, Int, Int, Int });
    routines.add("SWMG_GetLastBulletHitDamage", Int, { });
    routines.add("SWMG_GetLastBulletHitTarget", Int, { });
    routines.add("SWMG_GetLastBulletHitShooter", Object, { });
    routines.add("SWMG_AdjustFollowerHitPoints", Int, { Object, Int, Int });
    routines.add("SWMG_OnBulletHit", Void, { });
    routines.add("SWMG_OnObstacleHit", Void, { });
    routines.add("SWMG_GetLastFollowerHit", Object, { });
    routines.add("SWMG_GetLastObstacleHit", Object, { });
    routines.add("SWMG_GetLastBulletFiredDamage", Int, { });
    routines.add("SWMG_GetLastBulletFiredTarget", Int, { });
    routines.add("SWMG_GetObjectName", String, { Object });
    routines.add("SWMG_OnDeath", Void, { });
    routines.add("SWMG_IsFollower", Int, { Object });
    routines.add("SWMG_IsPlayer", Int, { Object });
    routines.add("SWMG_IsEnemy", Int, { Object });
    routines.add("SWMG_IsTrigger", Int, { Object });
    routines.add("SWMG_IsObstacle", Int, { Object });
    routines.add("SWMG_SetFollowerHitPoints", Void, { Object, Int });
    routines.add("SWMG_OnDamage", Void, { });
    routines.add("SWMG_GetLastHPChange", Int, { });
    routines.add("SWMG_RemoveAnimation", Void, { Object, String });
    routines.add("SWMG_GetCameraNearClip", Float, { });
    routines.add("SWMG_GetCameraFarClip", Float, { });
    routines.add("SWMG_SetCameraClip", Void, { Float, Float });
    routines.add("SWMG_GetPlayer", Object, { });
    routines.add("SWMG_GetEnemyCount", Int, { });
    routines.add("SWMG_GetEnemy", Object, { Int });
    routines.add("SWMG_GetObstacleCount", Int, { });
    routines.add("SWMG_GetObstacle", Object, { Int });
    routines.add("SWMG_GetHitPoints", Int, { Object });
    routines.add("SWMG_GetMaxHitPoints", Int, { Object });
    routines.add("SWMG_SetMaxHitPoints", Void, { Object, Int });
    routines.add("SWMG_GetSphereRadius", Float, { Object });
    routines.add("SWMG_SetSphereRadius", Void, { Object, Float });
    routines.add("SWMG_GetNumLoops", Int, { Object });
    routines.add("SWMG_SetNumLoops", Void, { Object, Int });
    routines.add("SWMG_GetPosition", Vector, { Object });
    routines.add("SWMG_GetGunBankCount", Int, { Object });
    routines.add("SWMG_GetGunBankBulletModel", String, { Object, Int });
    routines.add("SWMG_GetGunBankGunModel", String, { Object, Int });
    routines.add("SWMG_GetGunBankDamage", Int, { Object, Int });
    routines.add("SWMG_GetGunBankTimeBetweenShots", Float, { Object, Int });
    routines.add("SWMG_GetGunBankLifespan", Float, { Object, Int });
    routines.add("SWMG_GetGunBankSpeed", Float, { Object, Int });
    routines.add("SWMG_GetGunBankTarget", Int, { Object, Int });
    routines.add("SWMG_SetGunBankBulletModel", Void, { Object, Int, String });
    routines.add("SWMG_SetGunBankGunModel", Void, { Object, Int, String });
    routines.add("SWMG_SetGunBankDamage", Void, { Object, Int, Int });
    routines.add("SWMG_SetGunBankTimeBetweenShots", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankLifespan", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankSpeed", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankTarget", Void, { Object, Int, Int });
    routines.add("SWMG_GetLastBulletHitPart", String, { });
    routines.add("SWMG_IsGunBankTargetting", Int, { Object, Int });
    routines.add("SWMG_GetPlayerOffset", Vector, { });
    routines.add("SWMG_GetPlayerInvincibility", Float, { });
    routines.add("SWMG_GetPlayerSpeed", Float, { });
    routines.add("SWMG_GetPlayerMinSpeed", Float, { });
    routines.add("SWMG_GetPlayerAccelerationPerSecond", Float, { });
    routines.add("SWMG_GetPlayerTunnelPos", Vector, { });
    routines.add("SWMG_SetPlayerOffset", Void, { Vector });
    routines.add("SWMG_SetPlayerInvincibility", Void, { Float });
    routines.add("SWMG_SetPlayerSpeed", Void, { Float });
    routines.add("SWMG_SetPlayerMinSpeed", Void, { Float });
    routines.add("SWMG_SetPlayerAccelerationPerSecond", Void, { Float });
    routines.add("SWMG_SetPlayerTunnelPos", Void, { Vector });
    routines.add("SWMG_GetPlayerTunnelNeg", Vector, { });
    routines.add("SWMG_SetPlayerTunnelNeg", Void, { Vector });
    routines.add("SWMG_GetPlayerOrigin", Vector, { });
    routines.add("SWMG_SetPlayerOrigin", Void, { Vector });
    routines.add("SWMG_GetGunBankHorizontalSpread", Float, { Object, Int });
    routines.add("SWMG_GetGunBankVerticalSpread", Float, { Object, Int });
    routines.add("SWMG_GetGunBankSensingRadius", Float, { Object, Int });
    routines.add("SWMG_GetGunBankInaccuracy", Float, { Object, Int });
    routines.add("SWMG_SetGunBankHorizontalSpread", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankVerticalSpread", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankSensingRadius", Void, { Object, Int, Float });
    routines.add("SWMG_SetGunBankInaccuracy", Void, { Object, Int, Float });
    routines.add("SWMG_GetIsInvulnerable", Int, { Object });
    routines.add("SWMG_StartInvulnerability", Void, { Object });
    routines.add("SWMG_GetPlayerMaxSpeed", Float, { });
    routines.add("SWMG_SetPlayerMaxSpeed", Void, { Float });
    routines.add("AddJournalWorldEntry", Void, { Int, String, String });
    routines.add("AddJournalWorldEntryStrref", Void, { Int, Int });
    routines.add("BarkString", Void, { Object, Int });
    routines.add("DeleteJournalWorldAllEntries", Void, { });
    routines.add("DeleteJournalWorldEntry", Void, { Int });
    routines.add("DeleteJournalWorldEntryStrref", Void, { Int });
    routines.add("EffectForceDrain", Effect, { Int });
    routines.add("EffectPsychicStatic", Effect, { });
    routines.add("PlayVisualAreaEffect", Void, { Int, Location });
    routines.add("SetJournalQuestEntryPicture", Void, { String, Object, Int, Int, Int });
    routines.add("GetLocalBoolean", Int, { Object, Int });
    routines.add("SetLocalBoolean", Void, { Object, Int, Int });
    routines.add("GetLocalNumber", Int, { Object, Int });
    routines.add("SetLocalNumber", Void, { Object, Int, Int });
    routines.add("SWMG_GetSoundFrequency", Int, { Object, Int });
    routines.add("SWMG_SetSoundFrequency", Void, { Object, Int, Int });
    routines.add("SWMG_GetSoundFrequencyIsRandom", Int, { Object, Int });
    routines.add("SWMG_SetSoundFrequencyIsRandom", Void, { Object, Int, Int });
    routines.add("SWMG_GetSoundVolume", Int, { Object, Int });
    routines.add("SWMG_SetSoundVolume", Void, { Object, Int, Int });
    routines.add("SoundObjectGetPitchVariance", Float, { Object });
    routines.add("SoundObjectSetPitchVariance", Void, { Object, Float });
    routines.add("SoundObjectGetVolume", Int, { Object });
    routines.add("GetGlobalLocation", Location, { String });
    routines.add("SetGlobalLocation", Void, { String, Location });
    routines.add("AddAvailableNPCByObject", Int, { Int, Object });
    routines.add("RemoveAvailableNPC", Int, { Int });
    routines.add("IsAvailableCreature", Int, { Int });
    routines.add("AddAvailableNPCByTemplate", Int, { Int, String });
    routines.add("SpawnAvailableNPC", Object, { Int, Location });
    routines.add("IsNPCPartyMember", Int, { Int });
    routines.add("ActionBarkString", Void, { Int });
    routines.add("GetIsConversationActive", Int, { });
    routines.add("EffectLightsaberThrow", Effect, { Object, Object, Object, Int });
    routines.add("EffectWhirlWind", Effect, { });
    routines.add("GetPartyAIStyle", Int, { });
    routines.add("GetNPCAIStyle", Int, { Object });
    routines.add("SetPartyAIStyle", Void, { Int });
    routines.add("SetNPCAIStyle", Void, { Object, Int });
    routines.add("SetNPCSelectability", Void, { Int, Int });
    routines.add("GetNPCSelectability", Int, { Int });
    routines.add("ClearAllEffects", Void, { });
    routines.add("GetLastConversation", String, { });
    routines.add("ShowPartySelectionGUI", Void, { String, Int, Int });
    routines.add("GetStandardFaction", Int, { Object });
    routines.add("GivePlotXP", Void, { String, Int });
    routines.add("GetMinOneHP", Int, { Object });
    routines.add("SetMinOneHP", Void, { Object, Int });
    routines.add("SWMG_GetPlayerTunnelInfinite", Vector, { });
    routines.add("SWMG_SetPlayerTunnelInfinite", Void, { Vector });
    routines.add("SetGlobalFadeIn", Void, { Float, Float, Float, Float, Float });
    routines.add("SetGlobalFadeOut", Void, { Float, Float, Float, Float, Float });
    routines.add("GetLastHostileTarget", Object, { Object });
    routines.add("GetLastAttackAction", Int, { Object });
    routines.add("GetLastForcePowerUsed", Int, { Object });
    routines.add("GetLastCombatFeatUsed", Int, { Object });
    routines.add("GetLastAttackResult", Int, { Object });
    routines.add("GetWasForcePowerSuccessful", Int, { Object });
    routines.add("GetFirstAttacker", Object, { Object });
    routines.add("GetNextAttacker", Object, { Object });
    routines.add("SetFormation", Void, { Object, Object, Int, Int });
    routines.add("ActionFollowLeader", Void, { });
    routines.add("SetForcePowerUnsuccessful", Void, { Int, Object });
    routines.add("GetIsDebilitated", Int, { Object });
    routines.add("PlayMovie", Void, { String });
    routines.add("SaveNPCState", Void, { Int });
    routines.add("GetCategoryFromTalent", Int, { Talent });
    routines.add("SurrenderByFaction", Void, { Int, Int });
    routines.add("ChangeFactionByFaction", Void, { Int, Int });
    routines.add("PlayRoomAnimation", Void, { String, Int });
    routines.add("ShowGalaxyMap", Void, { Int });
    routines.add("SetPlanetSelectable", Void, { Int, Int });
    routines.add("GetPlanetSelectable", Int, { Int });
    routines.add("SetPlanetAvailable", Void, { Int, Int });
    routines.add("GetPlanetAvailable", Int, { Int });
    routines.add("GetSelectedPlanet", Int, { });
    routines.add("SoundObjectFadeAndStop", Void, { Object, Float });
    routines.add("SetAreaFogColor", Void, { Object, Float, Float, Float });
    routines.add("ChangeItemCost", Void, { String, Float });
    routines.add("GetIsLiveContentAvailable", Int, { Int });
    routines.add("ResetDialogState", Void, { });
    routines.add("SetGoodEvilValue", Void, { Object, Int });
    routines.add("GetIsPoisoned", Int, { Object });
    routines.add("GetSpellTarget", Object, { Object });
    routines.add("SetSoloMode", Void, { Int });
    routines.add("EffectCutSceneHorrified", Effect, { });
    routines.add("EffectCutSceneParalyze", Effect, { });
    routines.add("EffectCutSceneStunned", Effect, { });
    routines.add("CancelPostDialogCharacterSwitch", Void, { });
    routines.add("SetMaxHitPoints", Void, { Object, Int });
    routines.add("NoClicksFor", Void, { Float });
    routines.add("HoldWorldFadeInForDialog", Void, { });
    routines.add("ShipBuild", Int, { });
    routines.add("SurrenderRetainBuffs", Void, { });
    routines.add("SuppressStatusSummaryEntry", Void, { Int });
    routines.add("GetCheatCode", Int, { Int });
    routines.add("SetMusicVolume", Void, { Float });
    routines.add("CreateItemOnFloor", Object, { String, Location, Int });
    routines.add("SetAvailableNPCId", Void, { Int, Object });
    routines.add("IsMoviePlaying", Int, { });
    routines.add("QueueMovie", Void, { String, Int });
    routines.add("PlayMovieQueue", Void, { Int });
    routines.add("YavinHackCloseDoor", Void, { Object });
}

} // namespace game

} // namespace reone
